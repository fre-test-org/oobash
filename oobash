#!/bin/bash

# could put here a check -- unless we got a -y argument
# say "this will clobber all these vars, that ok?"
# and if not, exit before doing it

throw() {
    echo "!! $@" 1>&2
    exit 1
}

debug() {
    if [ -n "$DEBUG" ]; then
        echo "$@" 1>&2
    fi
}

inherits() {
    child=$1
    parent=$2
    if [ -z "$class" ]; then exit 1; fi
    if [ -z "$name" ]; then exit 2; fi
    oob_parents[$child]=$parent
}

object() {
    self=${FUNCNAME[0]}
    command="$1"
    shift

    if [ "$command" == "inherits" ]; then
        if [ -n "$1" ]; then
            oob_parents[$self]="$1"
        fi

    elif [ "$command" == "def" ]; then
        method_name="$1"
        if [ -z "$method_name" ]; then
            throw "No method name supplied"
        fi
        full_name="oob_object_$self[$method_name]"
        read -r -d '' method_definition
        source <(echo -e "$full_name () {\n$method_definition\n}")

    elif [ "$command" == "keys" ]; then
        test_name="\${!oob_object_${self}[@]}"
        eval echo "$test_name"

    elif [ "${command:0:1}" == '.' ]; then
        local property="oob_object_${self}[${command:1}]"
        if [ "$1" == "=" ]; then
            shift
            eval "${property}=\"$@\""
        else
            value="${!property}"
            type=$(type -t "$property")
            if [ -n "$value" ]; then
                echo "$value"
            elif [ "$type" == "function" ]; then
                "${property}" $@
            elif [ -n "${oob_parents[$self]}" ]; then
                "${oob_parents[$self]}" $command $@
            else
                throw "Property not found: $command"
            fi
        fi
    fi
}

new() {
    class=$1
    name=$2
    if [ -z "$class" ]; then exit 1; fi
    if [ -z "$name" ]; then exit 2; fi
    class_definition=$(declare -f $class)
    if [ -z "$class_definition" ]; then exit 3; fi
    instance_definition="${name}${class_definition#$class}"
    # semicolon because eval is going to mash this into one line
    echo "declare -A oob_parents;"
    echo "declare -A oob_object_${name};"
    echo "$instance_definition;"
    echo "$name inherits $class;"
}

eval "$(new object class)"
