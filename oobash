#!/bin/bash

declare -A oob_parents

throw() {
    echo "!! $@" 1>&2
    exit 1
}

debug() {
    if [ -n "$DEBUG" ]; then
        echo "-- $@" 1>&2
    fi
}

object() {
    local this_object=${FUNCNAME[0]}
    if [ -z "$self" ]; then local self="$this_object"; fi
    local command="$1"
    shift

    if [ "$command" == "inherits" ]; then
        if [ -n "$1" ]; then
            oob_parents[$this_object]="$1"
        fi

    elif [ "$command" == "def" ]; then
        local method_name="$1"
        if [ -z "$method_name" ]; then
            throw "No method name supplied"
        fi
        local full_name="oob_object_$this_object[$method_name]"
        local method_definition
        read -r -d '' method_definition
        source <(echo -e "$full_name () {\n$method_definition\n}")

    elif [ "$command" == "keys" ]; then
        local test_name="\${!oob_object_${this_object}[@]}"
        eval echo "$test_name"

    elif [ "${command:0:1}" == '.' ]; then
        local property="oob_object_${this_object}[${command:1}]"
        if [ "$1" == "=" ]; then
            shift
            eval "${property}=\"$@\""
        else
            local value="${!property}"
            local type=$(type -t "$property")
            if [ -n "$value" ]; then
                echo "$value"
            elif [ "$type" == "function" ]; then
                debug "calling function $property for $self"
                self=$self "$property" $@
            elif [ -n "${oob_parents[$this_object]}" ]; then
                debug "$this_object doesn't have $property for $self, going to parent"
                self=$self "${oob_parents[$this_object]}" $command $@
            else
                throw "Property not found: $command"
            fi
        fi
    fi
}

new() {
    local class=$1
    local name=$2
    if [[ -z "$class" || -z "$name" ]]; then
        throw "'new' requires two arguments (class and name)"
    fi
    local class_definition=$(declare -f $class)
    if [ -z "$class_definition" ]; then
        throw "Can't instantiate '$class'"
    fi
    local instance_definition="${name}${class_definition#$class}"
    # semicolons because eval is going to mash this into one line
    echo "declare -A oob_object_${name};"
    echo "$instance_definition;"
    echo "$name inherits $class;"
}

eval "$(new object class)"
